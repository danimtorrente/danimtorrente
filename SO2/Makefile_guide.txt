
Estructura básica de un Makefile:

	-Objetivos (targets): Son los nombres de los archivos que quieres generar, como zeos.bin, user, system, etc.
    
	-Dependencias: Son los archivos necesarios para generar el objetivo (por ejemplo, los archivos .o que se generan a partir 
		del código fuente).
	
	-Reglas: Son los comandos que se ejecutan para generar el objetivo (como ejecutar el compilador gcc, el ensamblador as, 
		o el enlazador ld).

EJEMPLO BASICO DE MAKEFILE:

blah: blah.o
	cc blah.o -o blah #runs third

blah.o: blah.c 
	cc -c blah.c -o blah.o #runs second

blah.c:
	echo "int main() {return 0; } > blah.c #runs first
-----------------------------------------------------------------------------------------------------------------
Si modifico algo de las dependencias y hago make, si se hace, si modifico el .c pero no lo tengo como dependencia, no pasa nada. 
El archivo .c no se le tiene que hacer nada podrias no ponerlo como dependencia, el problema es que una vez lo compiles ya no lo
podras compilar mas porque no mirara si el archivo es up to date. 
